name: Continuous Integration

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
    tags: ["v*"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
            distribution: adopt
            java-version: 11

      - name: Get mill version
        run: echo "MILL_VERSION=$(cat .mill-version)" >> $GITHUB_ENV

      - name: Setup Mill
        uses: jodersky/setup-mill@master
        with:
          mill-version: ${{ env.MILL_VERSION }}

      - name: Check formatting
        run: mill -k --disable-ticker __.checkFormat
      
      - name: Check headers
        run: mill -k --disable-ticker __.headerCheck

      - name: Compile
        run: mill -k --disable-ticker __.compile

      - name: Run tests
        run: mill -k --disable-ticker __.test

      - name: Publish ${{ github.ref }}
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          if [[ $(git tag --points-at HEAD) != '' ]]; then
            echo $PGP_SECRET | base64 --decode > gpg_key
            gpg --import --no-tty --batch --yes gpg_key
            rm gpg_key
            mill -i mill.scalalib.PublishModule/publishAll \
              --publishArtifacts __.publishArtifacts \
              --sonatypeUri "https://s01.oss.sonatype.org/service/local" \
              --sonatypeSnapshotUri "https://s01.oss.sonatype.org/content/repositories/snapshots" \
              --sonatypeCreds $SONATYPE_USERNAME:$SONATYPE_PASSWORD \
              --gpgArgs --passphrase=$PGP_PASSPHRASE,--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b \
              --readTimeout 600000 \
              --awaitTimeout 600000 \
              --release true \
              --signed true
          fi
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.S01_SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.S01_SONATYPE_USERNAME }}
